name: Deploy

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      RAILWAY_ENVIRONMENT:
        type: string
        description: 'Railway environment to deploy to'
        required: false
        default: 'production'
      DEPLOY_SERVICES:
        type: choice
        description: 'Services to deploy'
        required: false
        options:
          - 'indexer'
          - 'anvil'
          - 'all'
        default: 'all'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  NODE_OPTIONS: '--no-warnings'
  ACTIONS_RUNNER_DEBUG: true
  COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
  RAILWAY_ENVIRONMENT: ${{ github.event.inputs.RAILWAY_ENVIRONMENT }}
  DEPLOY_SERVICES: ${{ github.event.inputs.DEPLOY_SERVICES }}

jobs:
  checks:
    if: ${{ !contains(github.event.head_commit.message, '[skip-deploy]') }}
    timeout-minutes: 3
    runs-on: ['ubuntu-latest']
    steps:
      - name: 'üîë Checkout'
        uses: actions/checkout@v4.1.1

      - name: 'üê∞ Setup Bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: 'Setup Biome'
        uses: biomejs/setup-biome@v1
        with:
          version: 'latest'

      # if lint fails no need to continue
      - name: 'üßπ Lint'
        continue-on-error: false
        run: biome ci .

      - name: 'üì¶ Install Dependencies'
        run: bun install --frozen-lockfile

      - name: 'üß™ Typecheck'
        run: bun typecheck

      - name: 'üîß Build'
        run: bun run build

  deploy:
    # only deploy if commit message contains `[deploy]`
    if: ${{ contains(github.event.head_commit.message, '[deploy]') }}
    needs: [checks]
    timeout-minutes: 3
    runs-on: ['ubuntu-latest']
    steps:
      - name: 'üîë Checkout'
        uses: actions/checkout@v4.1.1

      - name: 'Install Railway CLI'
        run: yarn global add @railway/cli

      - name: 'Deploy Indexer'
        if: ${{ contains(env.DEPLOY_SERVICES, 'indexer') || contains(env.DEPLOY_SERVICES, 'all') }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_SERVICE_NAME: 'indexer'
        run: |
          railway link $RAILWAY_PROJECT_ID ${{ env.RAILWAY_SERVICE_NAME }} --environment='${{ env.RAILWAY_ENVIRONMENT }}'
          railway up --service='${{ env.RAILWAY_SERVICE_NAME }}' --environment='${{ env.RAILWAY_ENVIRONMENT }}'

      - name: 'Deploy Anvil'
        if: ${{ contains(env.DEPLOY_SERVICES, 'anvil') || contains(env.DEPLOY_SERVICES, 'all') }}
        working-directory: './anvil'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_SERVICE_NAME: 'anvil'
        run: |
          railway link $RAILWAY_PROJECT_ID ${{ env.RAILWAY_SERVICE_NAME }} --environment='${{ env.RAILWAY_ENVIRONMENT }}'
          railway up --service='${{ env.RAILWAY_SERVICE_NAME }}' --environment='${{ env.RAILWAY_ENVIRONMENT }}'
